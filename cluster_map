```{r setup, include=FALSE}
library(tidyverse)

library(robotstxt)
library(janitor)
library(rvest)
library(purrr)

# library(RSelenium)
library(stringr)

library(kableExtra)
library(sf)
library(leaflet)
library(viridis)

library(rnaturalearth)

library(mclust)
library(ggrepel)
library(GGally)

```

```{r data_wrangling}

faculty_pay <- read_csv("faculty_pay.csv")
graduation_rates <- read_csv("graduation_rates.csv")
student_demo <- read_csv("student_demographics_per_state.csv")
finance_table <- read_csv("finance_table.csv")

faculty_table <- faculty_pay %>%
  mutate(public_doctor_prof = as.numeric(gsub("[,\\$]", "", public_doctor_prof)),
         public_doctor_assoc = as.numeric(gsub("[,\\$]", "", public_doctor_assoc)),
         public_doctor_assist = as.numeric(gsub("[,\\$]", "", public_doctor_assist)),
         public_doctor_all = as.numeric(gsub("[,\\$]", "", public_doctor_all)),
         public_masters_prof = as.numeric(gsub("[,\\$]", "", public_masters_prof)),
         public_masters_assoc = as.numeric(gsub("[,\\$]", "", public_masters_assoc)),
         public_masters_assist = as.numeric(gsub("[,\\$]", "", public_masters_assist)),
         public_masters_all = as.numeric(gsub("[,\\$]", "", public_masters_all)),
         other_4yr_all = as.numeric(gsub("[,\\$]", "", other_4yr_all)),
         `2yr_all` = as.numeric(gsub("[,\\$]", "", `2yr_all`)))

student_table <- student_demo %>%
  mutate(women = as.numeric(gsub("[?=%]","", women)),
         minority = as.numeric(gsub("[?=%]","", minority)),
         native_american = as.numeric(gsub("[?=%]","", native_american)),
         asian = as.numeric(gsub("[?=%]","", asian)),
         black = as.numeric(gsub("[?=%]","", black)),
         hispanic = as.numeric(gsub("[?=%]","", hispanic)),
         pacific_islander = as.numeric(gsub("[?=%]","", pacific_islander)),
         white = as.numeric(gsub("[?=%]","", white)),
         `2+_races` = as.numeric(gsub("[?=%]","", `2+_races`)),
         nonresident = as.numeric(gsub("[?=%]","", nonresident)))

table_table <- student_table %>%
  left_join(finance_table, by = "state") %>%
  left_join(graduation_rates, by = "state") %>%
  left_join(faculty_table, by = "state")

```

```{r}
set.seed(3)

state_map <- ne_states(country = "united states of america", returnclass = "sf") %>%
  select(name, geometry) %>%
  rename(state = name)

clustering_vars <- c("state_funds", "public_doctor_all")
table_table <- table_table %>%
  drop_na(public_doctor_all, state_funds)
  
#Clustering the data by variables in clustering_vars
table_km <- table_table %>% 
  select(clustering_vars) %>% 
  kmeans(centers = 5, nstart = 20)

# Add cluster assignment to the data frame
table_table2 <- table_table %>%
  mutate(clusters = factor(table_km$cluster))

# Add geom of state map to table data frame
table_map <- state_map %>% 
  left_join(table_table2, by = "state")

# Plotting Map of Clustered States
pal <- colorFactor(topo.colors(5), table_table2$clusters)

leaflet(data = table_map) %>%
  addTiles() %>%
  addPolygons(color = ~pal(clusters), stroke = FALSE, fillOpacity = .5)

# Plotting Scatterplot of Clusters 
ggplot(data = table_table2, aes(x = state_funds, y = public_doctor_all)) + 
  geom_point(aes(color = clusters)) +
  labs(color = "Cluster assignment")

# Elbowplot
elbow_plot <- data.frame(elbow_clusters = 1:10,
                         within_ss = rep(NA, 10))

for (i in 1:10){
  table_kmi_out <- table_table2 %>% 
    select(clustering_vars) %>% 
    kmeans(centers = i, nstart = 20)
  
  elbow_plot$within_ss[i] <- table_kmi_out$tot.withinss
}

# Construct elbow plot
ggplot(elbow_plot, aes(x = elbow_clusters, y = within_ss)) +
  geom_point() + 
  geom_line() +
  scale_x_continuous(breaks = 1:10) +
  labs(x = "Number of clusters (k)", y = expression("Total W"[k]))
  
 #Construct Heat Map
table_map <- table_map %>%
  mutate(selected_ratio = state_funds / max(state_funds, na.rm = TRUE))

mybins <- c(0, .1, .2, .3, .4, .5, .6, .7, .8, .9, 1)
mypalette <- colorBin(palette = "magma", domain = table_map$selected_ratio, na.color="transparent", bins = mybins)

# Basic choropleth with leaflet?
leaflet(table_map) %>% 
  addTiles()  %>% 
 # setView(lat=10, lng=0 , zoom=2) %>%
  addPolygons(fillColor = ~mypalette(selected_ratio), stroke=FALSE, fillOpacity = .5) %>%
  addLegend(pal = mypalette, values = ~selected_ratio, opacity=0.9, position = "bottomleft")

```
